@using shop.ViewModels.Common

@model PagedResult<shop.ViewModels.Catalog.Orders.OrderVm>

@{
    ViewData["Title"] = "Order";

}

@section Scripts{
    <script>
        setTimeout(function () {
            $('#msgAlert').fadeOut('slow');
        }, 2000);

        function getOrderDetails(orderId) {
            // Gửi yêu cầu Ajax để lấy dữ liệu từ Controller
            $.ajax({
                type: "GET",
                url: "/Order/GetOrderDetails",
                data: { id: orderId },
                success: function (data) {
                    // Xử lý dữ liệu trả về
                    updateSmallTable(data);
                },
                error: function (error) {
                    console.error("Error fetching order details:", error);
                }
            });
        }

        function updateSmallTable(data) {
            var tbody = $("#smalltable tbody");

            // Xóa các dòng hiện tại trong bảng
            tbody.empty();

            // Kiểm tra xem dữ liệu có tồn tại và không rỗng
            if (data && data.length > 0) {
                console.log(data.length);
                // Duyệt qua từng phần tử trong mảng data và thêm vào bảng
                data.forEach(function (item) {
                    var row = "<tr>" +
                        "<td>" + item.imagePath + "</td>" +
                        "<td>" + item.productName + "</td>" +
                        "<td>" + item.quantity + "</td>" +
                        "<td>" + item.price + "</td>" +
                        "<td>" + item.subTotal + "</td>" +
                        "</tr>";
                    tbody.append(row);
                });
            } else {
                // Nếu data rỗng hoặc không tồn tại, có thể hiển thị thông báo hoặc xử lý khác tùy ý.
                // Ví dụ:
                var emptyRow = "<tr><td colspan='5'>Không có dữ liệu</td></tr>";
                tbody.append(emptyRow);
            }

            // Hiển thị bảng
            $(".expandable-body").removeClass("d-none");
        }

    </script>
}

<div class="container-fluid">
    <h1 class="mt-4">Danh sách đơn hàng</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/">Trang chủ</a></li>
        <li class="breadcrumb-item active">Danh sách đơn hàng</li>
    </ol>

    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("GetOrdersPaging","Order")">Tất cả</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("GetOrdersPaging","Order", new {status = 1})">Chờ xác nhận</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("GetOrdersPaging","Order", new {status = 2})">Chờ lấy hàng</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("GetOrdersPaging","Order", new {status = 3})">Đang giao</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("GetOrdersPaging","Order", new {status = 4})">Hoàn thành</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="@Url.Action("GetOrdersPaging","Order", new {status = 5})">Đã hủy</a>
        </li>
    </ul>

    <div class="card mb-12">
        <div class="card-header">
            <div class="row">
                <div class="col-md-6">
                    <div>
                        <form asp-action="GetOrdersPaging" method="get">
                            <div class="row">
                                <div class="col-md-4">
                                    <input type="text" value="@ViewBag.Keyword" name="keyword" class="form-control" />
                                </div>
                                <div class="col-md-4">
                                    <button type="submit" class="btn btn-primary">Tìm</button>
                                    <button type="button" onclick="window.location.href='/Order/GetOrdersPaging'" class="btn btn-dark">Reset</button>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div  style="margin-top: 10px">
                        <a class="btn btn-info" asp-action="ConfirmAllOrder" asp-controller="Order">Xác nhận tất cả đơn hàng</a>
                        <button class="btn btn-info" id="process-selected-orders">Xử lý các đơn hàng được chọn</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="card-body">
            <div class="row">
                @if (ViewBag.SuccessMsg != null)
            {
                <div id="msgAlert" class="alert alert-success" role="alert">
                        @ViewBag.SuccessMsg
                    </div>
            }
            </div>
            <div class="row">
            </div>
            <div class="table-responsive">
                <table class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>
                                <input type="checkbox" id="check-all-checkbox" onclick="checkAll()" />
                            </th>
                            <th>Mã đơn hàng</th>
                            <th>Tên khách hàng</th>
                            <th>Tổng đơn hàng</th>
                            <th>Trạng thái</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                    {
                        @*<tr onclick="location.href='@Url.Action("GetOrderDetails", "Order", new { id = item.Id })'">*@
                        <tr data-widget="expandable-table" aria-expanded="false" onclick="getOrderDetails('@item.Id')">
                                <td>
                                    <input type="checkbox" class="order-checkbox" data-id="@item.Id" onclick="event.stopPropagation();" />
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.OrderCode)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CustomerName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Total)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Status)
                                </td>
                                <td>
                                    @if (item.Status == shop.Data.Enums.OrderStatus.Pending)
                                {
                                    <a class="btn btn-warning" href="@Url.Action("ConfirmOrder", "Order", new {id = item.Id})" onclick="event.stopPropagation();">Xác nhận</a>
                                }
                                else if (item.Status == shop.Data.Enums.OrderStatus.AwaitingShipment)
                                {
                                    <a class="btn btn-info" href="@Url.Action("GetOrderToShipper", "Order", new {id = item.Id})" onclick="event.stopPropagation();">Đã gửi hàng</a>
                                }
                                else if (item.Status == shop.Data.Enums.OrderStatus.AWaitingPickup)
                                {
                                    <a class="btn btn-success" href="@Url.Action("CompleteOrder", "Order", new {id = item.Id})" onclick="event.stopPropagation();">Hoàn thành</a>
                                }
                                    @if(item.Status != shop.Data.Enums.OrderStatus.Cancelled)
                                {
                                    <a class="btn btn-danger" href="@Url.Action("CancelOrder", "Order", new {id = item.Id})" onclick="event.stopPropagation();">Hủy</a>
                                }

                                </td>
                            </tr>
                        <tr class="expandable-body d-none">
                                <td colspan="6">
                                    <div class="table-responsive">
                                        <table class="table table-bordered table-hover" id="smalltable">
                                            <thead>
                                                <tr>
                                                    <th>Hình ảnh</th>
                                                    <th>Product Name</th>
                                                    <th>Quantity</th>
                                                    <th>Price</th>
                                                    <th>SubTotal</th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>
                                        </table>
                                    </div>
                                </td>
                            </tr>
                    }
                    </tbody>
                </table>
            </div>
            @await Component.InvokeAsync("Pager",Model)
        </div>
    </div>
</div>

<script>
    // Hàm xử lý sự kiện khi checkbox đầu tiên được chọn
    function checkAll() {
        var checkboxes = document.getElementsByClassName('order-checkbox');
        var checkAllCheckbox = document.getElementById('check-all-checkbox');

        for (var i = 0; i < checkboxes.length; i++) {
            checkboxes[i].checked = checkAllCheckbox.checked;
        }
    }

    // Gửi id của những order được checkbox == true về controller
    $(document).ready(function () {
        // Gán sự kiện click cho nút xử lý đơn hàng được chọn
        $("#process-selected-orders").click(function () {
            // Lấy danh sách các đơn hàng được chọn
            var selectedOrderIds = [];
            $(".order-checkbox:checked").each(function () {
                selectedOrderIds.push($(this).data("id"));
            });

            // Gửi yêu cầu Ajax lên server
            $.ajax({
                type: "POST",
                url: "/Order/ProcessSelectedOrders",
                data: { orderIds: selectedOrderIds },
                success: function (data) {
                    // Xử lý kết quả trả về nếu cần
                    // ...
                },
                error: function (error) {
                    // Xử lý lỗi nếu có
                    // ...
                }
            });
        });
    });

</script>